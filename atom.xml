<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[可塑の记忆]]></title>
  <subtitle><![CDATA[yuitakuの个人博客]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yuitaku.github.io//"/>
  <updated>2015-09-01T12:14:29.048Z</updated>
  <id>http://yuitaku.github.io//</id>
  
  <author>
    <name><![CDATA[yuitaku]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Head First Python]]></title>
    <link href="http://yuitaku.github.io/2015/08/29/python/"/>
    <id>http://yuitaku.github.io/2015/08/29/python/</id>
    <published>2015-08-29T09:29:03.000Z</published>
    <updated>2015-09-01T12:14:29.048Z</updated>
    <content type="html"><![CDATA[<h2 id="Questions">Questions</h2><ol>
<li><strong>写一个day列表包含着星期一至星期七,用print()BIF将他打印在屏幕，接下来用len()BIF得出列表中有几个数据项，然后访问day的第6个数据的值并打印。</strong></li>
<li><strong>name=[‘Somiy’,’Keyor’,’Resalg’,’Yuitaku’]为末尾添加Alice，删除Yuitaku，在为末尾添加一个数据集合Hello,World后打印。提示使用：append()，pop()，extend()!</strong></li>
<li><strong>为day列表添加星期的简写，如’Monday’,’Mon’,完成后将他打印在屏幕上。提示使用：insert()，append()，remove()!</strong></li>
<li><strong>使用for语句和while语句迭代day列表。</strong></li>
<li><strong>使用if…else…，isinstance()BIF完成迭代month(‘一月’,[‘January’,[‘Jan’]]形式写到六月)。</strong></li>
<li><strong>写一个递归函数print_lol()完成month(‘七月’,[‘July,[‘Jul’]]形式写到十二月)完成迭代。</strong></li>
<li><strong>创建一个名为miku的文件夹，给print_lol增加注释、每一层嵌套增加一个Tab，默认缩进为False，完成后保存为miku.py于miku文件夹内,在创建一个名为setup.py的文件包含有关发布的元数据，构建发布安装于本地，发布于<a href="https://pypi.python.org/pypi" target="_blank" rel="external">pypi</a>，import miku后处理month(‘一月’,[‘January’,[‘Jan’]]形式写到十二月)开启缩进3个Tab键。</strong></li>
<li><strong>创建一个<span title="练习">Practice</span>的文件夹，另外创建一个子文件夹为chapter3，将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>放入子文件夹中。 导入os模块，进行简单的遍历这个文件。提示 ：open()，close()，readline()，seek()，os.getcwd()，os.chdir()!</strong></li>
<li><strong>用try/except和if…else…二种方法将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>以第一个:为分割并用said:代替，打印在IDLE中。提示：os.path.exists()，split()，try，except，pass，help(<span title="x为已经存在的量">x</span>.split)使用帮助!</strong></li>
<li><strong>将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>中的Man、Other Man分离、去除不必要的空格打印在IDLE上。提示：man=[]，other=[]，strip()!</strong></li>
<li><strong>用open()写一个名为Alice.txt的文件，内容为Hello Alice!</strong></li>
<li><strong>将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>中的Man、Other Man分离、去除不必要的空格、使用finally关闭文件，输出man_data.txt和other_data.txt文件。提示：open，print(man,file=)，close()!</strong></li>
<li><strong>用with as将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>中的Man、Other Man分离、去除不必要的空格输出man_data.txt和other_data.txt文件。并用readline()读取man_data.txt数据。提示：with…as…，readline()!</strong></li>
<li><strong>重写print_lol添加第4个参数fn=sys.stdout，并将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>使用print_lol代替print重新输出man_data.txt和other_data.txt文件。提示：sys.stdout（标准输出:如果调用这个函数时没有指定文件对象依旧则会依然写在至屏幕)）</strong></li>
<li><strong>使用pickle模块腌制<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>输出man_data.txt、other_data.txt文件后使用print_lol还原man.txt、other.txt文件。提示：import pickle，pickle.dump()，pickle.load()!</strong></li>
<li><strong>将num=” 585,18,1853,6621,17832,123,985,156,16587,258,186325,4552 “字符串去掉空格以,分割成列表从小到大排序。提示：像sort()，sorted()传入参数reverse=True将反转大小!</strong></li>
<li><strong>将4个选手的<a href="http://python.itcarlow.ie/chapter5/hfpy_ch5_data.zip" target="_blank" rel="external">600米记录</a>数字从小到大排序并打印。提示：sanitize(清理)!</strong></li>
<li><strong>将下面的例子”clean_somiy=[] for each_t in somiy: clean_somiy.append(sanitize(each_t))”推导列表。</strong></li>
<li><strong>用推导列表将分钟转换为秒、将米转换成英尺(1米=3.281英尺)、将混合英文大小写，全部大写、使用sanitize()转换正确的时间、将字符串转换成浮点型float()、当然你可以使用函数链转换前面两项。</strong></li>
<li><strong>将4个选手的<a href="http://python.itcarlow.ie/chapter5/hfpy_ch5_data.zip" target="_blank" rel="external">600米记录</a>数字从小到大排序取前3个不重复数据，不实用set()的情况下。提示：not in，sanitize(清理)，unique(独特)!</strong></li>
<li><strong>将4个选手的<a href="http://python.itcarlow.ie/chapter5/hfpy_ch5_data.zip" target="_blank" rel="external">600米记录</a>数字从小到大排序取前3个不重复数据，使用函数set()简化代码。提示：set()去除重复数据，toach(教练)!</strong></li>
<li><strong>用普通方法将keyor.txt文件从小到大排序取前3个不重复数据并题注名称打印。</strong></li>
<li><strong>简单创建字典book和people。提示：s={}，s=dict()!</strong></li>
<li><strong>用字典将keyor.txt、resalg.txt文件从小到大排序取前3个不重复数据并题注名称打印。</strong></li>
<li><strong>创建一个Athlete类，添加一个how_big的方法，输出”Hello world”的长度。</strong></li>
<li><strong>创建一个Athlete类，为他添加参数Name，Dob，times，并创建2个类的对象keyor和somiy。</strong></li>
<li><strong>创建一个Athlete类，为他添加top3(()，add_time()，add_times()方法，用Athlete类创建keyor，用add_time()，add_time()添加时间后使用pop3()方法打印前三的时间。提示：Athlete(运动员)!</strong></li>
<li><strong>让Athlete继承内置的list类,有一个name属性，输出4个喜欢的水果。提示:apple(苹果)，banana(香蕉)，peaches(桃子)，Strawberry(草莓)! </strong></li>
<li><strong>写一个AthleteList继承list的类，写出Athlete的效果！</strong></li>
</ol>
<h2 id="Answers">Answers</h2><p>1. <strong>写一个day列表包含着星期一至星期七,用print()BIF将他打印在屏幕，接下来用len()BIF得出列表中有几个数据项，然后访问day的第6个数据的值并打印。</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">day=[<span class="string">'Monday'</span>,<span class="string">'Tuesday'</span>,<span class="string">'Wednesday'</span>,<span class="string">'Thursday'</span>,<span class="string">'Friday'</span>,<span class="string">'Saturday'</span>,<span class="string">'Sunday'</span>]</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(day)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(len(day)</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(day[<span class="number">5</span>])</span></span></span><br></pre></td></tr></table></figure>
<p>2. <strong>name=[‘Somiy’,’Keyor’,’Resalg’,’Yuitaku’]为末尾添加Alice，删除Yuitaku，在为末尾添加一个数据集合Hello,World后打印。提示使用：append()，pop()，extend()!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name=[<span class="string">'Somiy'</span>,<span class="string">'Keyor'</span>,<span class="string">'Resalg'</span>,<span class="string">'Yuitaku'</span>]</span><br><span class="line">name.<span class="function"><span class="title">append</span><span class="params">(<span class="string">'Alice'</span>)</span></span></span><br><span class="line">name.<span class="function"><span class="title">pop</span><span class="params">(<span class="number">3</span>)</span></span></span><br><span class="line">name.<span class="function"><span class="title">extend</span><span class="params">([<span class="string">'Hello'</span>,<span class="string">'World'</span>])</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(name)</span></span></span><br></pre></td></tr></table></figure>
<p>3. <strong>为day列表添加星期的简写，如’Monday’,’Mon’,完成后将他打印在屏幕上。提示使用：insert()，append()，remove()!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">day=[<span class="string">'Monday'</span>,<span class="string">'Tuesday'</span>,<span class="string">'Wednesday'</span>,<span class="string">'Thursday'</span>,<span class="string">'Friday'</span>,<span class="string">'Saturday'</span>,<span class="string">'Sunday'</span>]</span><br><span class="line">day.<span class="function"><span class="title">insert</span><span class="params">(<span class="number">1</span>,<span class="string">'Mon'</span>)</span></span></span><br><span class="line">day.<span class="function"><span class="title">insert</span><span class="params">(<span class="number">3</span>,<span class="string">'Tue'</span>)</span></span></span><br><span class="line">day.<span class="function"><span class="title">insert</span><span class="params">(<span class="number">5</span>,<span class="string">'Wed'</span>)</span></span></span><br><span class="line">day.<span class="function"><span class="title">insert</span><span class="params">(<span class="number">7</span>,<span class="string">'Thu'</span>)</span></span></span><br><span class="line">day.<span class="function"><span class="title">insert</span><span class="params">(<span class="number">9</span>,<span class="string">'Fri'</span>)</span></span></span><br><span class="line">day.<span class="function"><span class="title">insert</span><span class="params">(<span class="number">11</span>,<span class="string">'Sat'</span>)</span></span></span><br><span class="line">day.<span class="function"><span class="title">append</span><span class="params">(<span class="string">'Sun'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(day)</span></span></span><br></pre></td></tr></table></figure>
<p>4. <strong>使用for语句和while语句迭代day列表。</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">day=[<span class="string">'Monday'</span>,<span class="string">'Tuesday'</span>,<span class="string">'Wednesday'</span>,<span class="string">'Thursday'</span>,<span class="string">'Friday'</span>,<span class="string">'Saturday'</span>,<span class="string">'Sunday'</span>]</span><br><span class="line"><span class="keyword">for</span> each_day <span class="keyword">in</span> day:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(each_day)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">'- - - - - - - - - -'</span>)</span></span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line">while count &lt; <span class="function"><span class="title">len</span><span class="params">(day)</span></span>:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(day[count])</span></span></span><br><span class="line">    count=count+<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>5. <strong>使用if…else…，isinstance()BIF完成迭代month(‘一月’,[‘January’,[‘Jan’]]形式写到六月)。</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">month=[<span class="string">'一月'</span>,[<span class="string">'January'</span>,[<span class="string">'Jan'</span>]],<span class="string">'二月'</span>,[<span class="string">'February'</span>,[<span class="string">'Feb'</span>]],<span class="string">'三月'</span>,[<span class="string">'March'</span>,[<span class="string">'Mar'</span>]],<span class="string">'四月'</span>,[<span class="string">'April'</span>,[<span class="string">'Apr'</span>]],<span class="string">'五月'</span>,[<span class="string">'May'</span>,[<span class="string">'May'</span>]],<span class="string">'六月'</span>,[<span class="string">'June'</span>,[<span class="string">'Jun'</span>]]]</span><br><span class="line"><span class="keyword">for</span> each_cn <span class="keyword">in</span> month:</span><br><span class="line">    <span class="keyword">if</span> <span class="function"><span class="title">isinstance</span><span class="params">(each_cn,list)</span></span>:</span><br><span class="line">        <span class="keyword">for</span> each_en <span class="keyword">in</span> each_cn:</span><br><span class="line">                <span class="keyword">if</span> <span class="function"><span class="title">isinstance</span><span class="params">(each_en,list)</span></span>:</span><br><span class="line">                   <span class="keyword">for</span> each_simple <span class="keyword">in</span> each_en:</span><br><span class="line">                       <span class="function"><span class="title">print</span><span class="params">(each_simple)</span></span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="function"><span class="title">print</span><span class="params">(each_en)</span></span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="function"><span class="title">print</span><span class="params">(each_cn)</span></span></span><br></pre></td></tr></table></figure>
<p>6. <strong>写一个递归函数print_lol()完成month(‘七月’,[‘July,[‘Jul’]]形式写到十二月)完成迭代。</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">month=[<span class="string">'七月'</span>,[<span class="string">'July'</span>,[<span class="string">'Jul'</span>]],<span class="string">'八月'</span>,[<span class="string">'August'</span>,[<span class="string">'Aug'</span>]],<span class="string">'九月'</span>,[<span class="string">'September'</span>,[<span class="string">'Sep'</span>]],<span class="string">'十月'</span>,[<span class="string">'October'</span>,[<span class="string">'Oct'</span>]],<span class="string">'十一月'</span>,[<span class="string">'November'</span>,[<span class="string">'Nov'</span>]],<span class="string">'十二月'</span>,[<span class="string">'December'</span>,[<span class="string">'Dec'</span>]]]</span><br><span class="line">def <span class="function"><span class="title">print_lol</span><span class="params">(the_list)</span></span>:</span><br><span class="line">    <span class="keyword">for</span> each_list <span class="keyword">in</span> the_list:</span><br><span class="line">        <span class="keyword">if</span> <span class="function"><span class="title">isinstance</span><span class="params">(each_list,list)</span></span>:</span><br><span class="line">            <span class="function"><span class="title">print_lol</span><span class="params">(each_list)</span></span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="function"><span class="title">print</span><span class="params">(each_list)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print_lol</span><span class="params">(month)</span></span></span><br></pre></td></tr></table></figure>
<p>7. <strong>创建一个名为miku的文件夹，给print_lol增加注释、每一层嵌套增加一个Tab，默认缩进为False，完成后保存为miku.py于miku文件夹内,在创建一个名为setup.py的文件包含有关发布的元数据，构建发布安装于本地，发布于<a href="https://pypi.python.org/pypi" target="_blank" rel="external">pypi</a>，import miku后处理month(‘一月’,[‘January’,[‘Jan’]]形式写到八月)开启缩进3个Tab键。</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">- - - - - - - - - - - miku.py- - - - - - - - - - - </span><br><span class="line"><span class="string">'''</span><br><span class="line">the_list为列表，indent是否打开缩进默认为关闭状态，level为所有缩进Tab</span><br><span class="line">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_lol</span><span class="params">(the_list,indent=False,level=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> each_list <span class="keyword">in</span> the_list:</span><br><span class="line">        <span class="keyword">if</span> isinstance(each_list,list):</span><br><span class="line">            print_lol(each_list,indent,level+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> indent:</span><br><span class="line">                <span class="keyword">for</span> tab_stop <span class="keyword">in</span> range(level):</span><br><span class="line">                    print(<span class="string">'\t'</span>,end=<span class="string">''</span>)</span><br><span class="line">            print(each_list)</span><br><span class="line">- - - - - - - - - - - setup.py- - - - - - - - - - - </span><br><span class="line"><span class="keyword">from</span> distutils.core <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">        name            = <span class="string">'miku'</span>,</span><br><span class="line">        version         = <span class="string">'1.2.1'</span>,</span><br><span class="line">        py_modules      = [<span class="string">'miku'</span>],</span><br><span class="line">        author          = <span class="string">'keyor'</span>,</span><br><span class="line">        author_email    = <span class="string">'rainsky123@123.com'</span>,</span><br><span class="line">        url             = <span class="string">'http://xxx.com'</span>,</span><br><span class="line">        description     = <span class="string">'Sorry,This is Practice'</span></span><br><span class="line">    )</span><br><span class="line">- - - - - - - - - - - 进入cmd- - - - - - - - - - - </span><br><span class="line">cd miku目录</span><br><span class="line">python setup.py sdist install				</span><br><span class="line"><span class="comment">#构建发布文件并安装在python本地副本</span></span><br><span class="line">python setup.py register					</span><br><span class="line"><span class="comment">#注册PIPY帐号（已经在pypi注册的前提下）</span></span><br><span class="line">python setup.py sdist upload			</span><br><span class="line"><span class="comment">#构建发布文件并上传pypi</span></span><br><span class="line">- - - - - - - - - - - 进入IDLE- - - - - - - - - - - </span><br><span class="line"><span class="keyword">import</span> miku</span><br><span class="line">month=[<span class="string">'一月'</span>,[<span class="string">'January'</span>,[<span class="string">'Jan'</span>]],<span class="string">'二月'</span>,[<span class="string">'February'</span>,[<span class="string">'Feb'</span>]],<span class="string">'三月'</span>,[<span class="string">'March'</span>,[<span class="string">'Mar'</span>]],<span class="string">'四月'</span>,[<span class="string">'April'</span>,[<span class="string">'Apr'</span>]],<span class="string">'五月'</span>,[<span class="string">'May'</span>,[<span class="string">'May'</span>]],<span class="string">'六月'</span>,[<span class="string">'June'</span>,[<span class="string">'Jun'</span>]],<span class="string">'七月'</span>,[<span class="string">'July'</span>,[<span class="string">'Jul'</span>]],<span class="string">'八月'</span>,[<span class="string">'August'</span>,[<span class="string">'Aug'</span>]]]</span><br><span class="line">miku.print_lol(month,<span class="keyword">True</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>8. <strong>创建一个<span title="练习">Practice</span>的文件夹，另外创建一个子文件夹为chapter3，将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>放入子文件夹中。 导入os模块，进行简单的遍历这个文件。提示 ：open()，close()，readline()，seek()，os.getcwd()，os.chdir()!</strong></p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import os</span><br><span class="line">&gt;&gt;&gt; os.getcwd()</span><br><span class="line">'C:\\Python34'</span><br><span class="line">&gt;&gt;&gt; os.chdir('../Users\keory\Desktop\Practice\chapter3')</span><br><span class="line">&gt;&gt;&gt; os.getcwd()</span><br><span class="line">'C:\\Users\\keory\\Desktop\\Practice\\chapter3'</span><br><span class="line">&gt;&gt;&gt; data=<span class="keyword">open</span>('sketch.txt')</span><br><span class="line">&gt;&gt;&gt; print(data.readline(),end='')</span><br><span class="line"><span class="keyword">Man</span>: <span class="keyword">Is</span> this the right <span class="keyword">room</span> for an argument?</span><br><span class="line">&gt;&gt;&gt; print(data.readline(),end='')</span><br><span class="line">Other <span class="keyword">Man</span>: I've told you once.</span><br><span class="line">&gt;&gt;&gt; data.seek(0)</span><br><span class="line">0</span><br><span class="line">&gt;&gt;&gt; for each_line in data:</span><br><span class="line">	print(each_line,end='')</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"><span class="keyword">Man</span>: <span class="keyword">Is</span> this the right <span class="keyword">room</span> for an argument?</span><br><span class="line">Other <span class="keyword">Man</span>: I've told you once.</span><br><span class="line"><span class="keyword">Man</span>: No you haven't!</span><br><span class="line">Other <span class="keyword">Man</span>: Yes I have.</span><br><span class="line"><span class="keyword">Man</span>: When?</span><br><span class="line">Other <span class="keyword">Man</span>: Just now.</span><br><span class="line"><span class="keyword">Man</span>: No you didn't!</span><br><span class="line">Other <span class="keyword">Man</span>: Yes I did!</span><br><span class="line"><span class="keyword">Man</span>: You didn't!</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">data.close()</span><br></pre></td></tr></table></figure>
<p>9. <strong>用try/except和if…else…二种方法将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>以第一个:为分割并用said:代替，打印在IDLE中。提示：os.path.exists()，not，split()，find()，try，except，pass，help(<span title="x为已经存在的量">x</span>.split)使用帮助!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">文件都与sketch.txt放在同一目录</span><br><span class="line">- - - - - - - - - - - try<span class="class">.py-</span> - - - - - - - - - -</span><br><span class="line">try:</span><br><span class="line">    data=<span class="function"><span class="title">open</span><span class="params">(<span class="string">'sketch.txt'</span>)</span></span></span><br><span class="line">    <span class="keyword">for</span> each_line <span class="keyword">in</span> data:</span><br><span class="line">        try:</span><br><span class="line">            (role,line_spoken)=each_line.<span class="function"><span class="title">split</span><span class="params">(<span class="string">':'</span>,<span class="number">1</span>)</span></span></span><br><span class="line">            <span class="function"><span class="title">print</span><span class="params">(role,end=<span class="string">''</span>)</span></span></span><br><span class="line">            <span class="function"><span class="title">print</span><span class="params">(<span class="string">' said:'</span>,end=<span class="string">''</span>)</span></span></span><br><span class="line">            <span class="function"><span class="title">print</span><span class="params">(line_spoken,end=<span class="string">''</span>)</span></span></span><br><span class="line">        except ValueError:</span><br><span class="line">            pass</span><br><span class="line">			</span><br><span class="line">    data.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br><span class="line">except IOError:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'文件没找到!'</span>)</span></span></span><br><span class="line">- - - - - - - - - - - ifelse<span class="class">.py-</span> - - - - - - - - - -</span><br><span class="line">import os</span><br><span class="line"><span class="keyword">if</span> os<span class="class">.path</span><span class="class">.exists</span>(<span class="string">'sketch.txt'</span>):</span><br><span class="line">    data = <span class="function"><span class="title">open</span><span class="params">(<span class="string">'sketch.txt'</span>)</span></span></span><br><span class="line">    <span class="keyword">for</span> each_line <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> not each_line.<span class="function"><span class="title">find</span><span class="params">(<span class="string">':'</span>)</span></span> == -<span class="number">1</span>:</span><br><span class="line">            (role,line_spoken)=each_line.<span class="function"><span class="title">split</span><span class="params">(<span class="string">':'</span>,<span class="number">1</span>)</span></span></span><br><span class="line">            <span class="function"><span class="title">print</span><span class="params">(role,end=<span class="string">''</span>)</span></span></span><br><span class="line">            <span class="function"><span class="title">print</span><span class="params">(<span class="string">' said:'</span>,end=<span class="string">''</span>)</span></span></span><br><span class="line">            <span class="function"><span class="title">print</span><span class="params">(line_spoken,end=<span class="string">''</span>)</span></span></span><br><span class="line">			</span><br><span class="line">    data.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'文件不存在!'</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>10. <strong>将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>中的Man、Other Man分离、去除不必要的空格打印在IDLE上。提示：man=[]，other=[]，strip()!</strong></p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">man</span>=<span class="comment">[]</span></span><br><span class="line">other=<span class="comment">[]</span></span><br><span class="line">try:</span><br><span class="line">    data=<span class="keyword">open</span>('sketch.txt')</span><br><span class="line">    for each_line in data:</span><br><span class="line">        try:</span><br><span class="line">            (role,line_spoken)=each_line.split(':',1)</span><br><span class="line">            line_spoken=line_spoken.strip()</span><br><span class="line">            if role == '<span class="keyword">Man</span>':</span><br><span class="line">                <span class="keyword">man</span>.append(line_spoken)</span><br><span class="line">            elif role =='Other <span class="keyword">Man</span>':</span><br><span class="line">                other.append(line_spoken)</span><br><span class="line">        except ValueError:</span><br><span class="line">            pass</span><br><span class="line">    data.close()</span><br><span class="line">except IOError:</span><br><span class="line">    print('The File <span class="keyword">Is</span> Not Found!')</span><br><span class="line"></span><br><span class="line">print(<span class="keyword">man</span>)</span><br><span class="line">print(other)</span><br></pre></td></tr></table></figure>
<p>11. <strong>用open()写一个名为Alice.txt的文件，内容为Hello Alice!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data=<span class="function"><span class="title">open</span><span class="params">(<span class="string">'Alice.txt'</span>,<span class="string">'w'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">'Hello Alice!'</span>,file=data)</span></span></span><br><span class="line">data.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
<p>12. <strong>将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>中的Man、Other Man分离、去除不必要的空格、使用finally关闭文件，输出man_data.txt和other_data.txt文件。提示：open，print(man,file=)，close()!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">man=[]</span><br><span class="line">other=[]</span><br><span class="line">try:</span><br><span class="line">    data = <span class="function"><span class="title">open</span><span class="params">(<span class="string">'sketch.txt'</span>)</span></span></span><br><span class="line">    <span class="keyword">for</span> each_list <span class="keyword">in</span> data:</span><br><span class="line">        try:</span><br><span class="line">            (role,line_spoken)=each_list.<span class="function"><span class="title">split</span><span class="params">(<span class="string">':'</span>,<span class="number">1</span>)</span></span></span><br><span class="line">            line_spoken=line_spoken.<span class="function"><span class="title">strip</span><span class="params">()</span></span></span><br><span class="line">            <span class="keyword">if</span> role == <span class="string">'Man'</span>:</span><br><span class="line">                man.<span class="function"><span class="title">append</span><span class="params">(line_spoken)</span></span></span><br><span class="line">            elif role ==<span class="string">'Other Man'</span>:</span><br><span class="line">                other.<span class="function"><span class="title">append</span><span class="params">(line_spoken)</span></span></span><br><span class="line">        except ValueError:</span><br><span class="line">            pass</span><br><span class="line">except IOError as err:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'File Error:'</span>+str(err)</span></span>)</span><br><span class="line">finally:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'data'</span> <span class="keyword">in</span> <span class="function"><span class="title">locals</span><span class="params">()</span></span>:</span><br><span class="line">        data.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br><span class="line">try:</span><br><span class="line">    man_file=<span class="function"><span class="title">open</span><span class="params">(<span class="string">'man_data.txt'</span>,<span class="string">'w'</span>)</span></span></span><br><span class="line">    other_file=<span class="function"><span class="title">open</span><span class="params">(<span class="string">'other_data.txt'</span>,<span class="string">'w'</span>)</span></span></span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(man,file=man_file)</span></span></span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(other,file=other_file)</span></span></span><br><span class="line">except IOError as ferr:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(ferr)</span></span>)</span><br><span class="line">finally:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'man_file'</span> <span class="keyword">in</span> <span class="function"><span class="title">locals</span><span class="params">()</span></span>:</span><br><span class="line">        man_file.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'other_file'</span> <span class="keyword">in</span> <span class="function"><span class="title">locals</span><span class="params">()</span></span>:</span><br><span class="line">        other_file.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
<p>13. <strong>用with as将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>中的Man、Other Man分离、去除不必要的空格输出man_data.txt和other_data.txt文件。并用readline()读取man_data.txt数据。提示：with…as…，readline()!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">man=[]</span><br><span class="line">other=[]</span><br><span class="line">try:</span><br><span class="line">    data=<span class="function"><span class="title">open</span><span class="params">(<span class="string">'sketch.txt'</span>)</span></span></span><br><span class="line">    <span class="keyword">for</span> each_line <span class="keyword">in</span> data:</span><br><span class="line">        try:</span><br><span class="line">            (role,line_spoken)=each_line.<span class="function"><span class="title">split</span><span class="params">(<span class="string">':'</span>,<span class="number">1</span>)</span></span></span><br><span class="line">            line_spoken=line_spoken.<span class="function"><span class="title">strip</span><span class="params">()</span></span></span><br><span class="line">            <span class="keyword">if</span> role == <span class="string">'Man'</span>:</span><br><span class="line">                man.<span class="function"><span class="title">append</span><span class="params">(line_spoken)</span></span></span><br><span class="line">            elif role == <span class="string">'Other Man'</span>:</span><br><span class="line">                other.<span class="function"><span class="title">append</span><span class="params">(line_spoken)</span></span></span><br><span class="line">        except ValueError:</span><br><span class="line">            pass</span><br><span class="line">    data.<span class="function"><span class="title">close</span><span class="params">()</span></span></span><br><span class="line">except IOError as err:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'File Error:'</span>+str(err)</span></span>)</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'man_data.txt'</span>,<span class="string">'w'</span>)</span><span class="title">as</span></span> man_file,<span class="function"><span class="title">open</span><span class="params">(<span class="string">'other_data.txt'</span>,<span class="string">'w'</span>)</span><span class="title">as</span></span> other_file:</span><br><span class="line">        <span class="function"><span class="title">print</span><span class="params">(man,file=man_file)</span></span></span><br><span class="line">        <span class="function"><span class="title">print</span><span class="params">(other,file=other_file)</span></span></span><br><span class="line">except IOError:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'File Not Found!'</span>)</span></span></span><br><span class="line"></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'man_data.txt'</span>)</span><span class="title">as</span></span> mdf:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(mdf.readline()</span></span>)</span><br></pre></td></tr></table></figure>
<p>14. <strong>重写print_lol添加第4个参数fn=sys.stdout，并将<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>使用print_lol代替print重新输出man_data.txt和other_data.txt文件。提示：sys.stdout（标准输出:如果调用这个函数时没有指定文件对象依旧则会依然写在至屏幕)）</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">新建一个ae文件夹</span><br><span class="line">- - - - - - - - - - - ae.py- - - - - - - - - - -</span><br><span class="line"><span class="string">'''</span><br><span class="line">file=fn是调整两个print()调用来使用的新参数</span><br><span class="line">'''</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_lol</span><span class="params">(the_list,indent=False,level=<span class="number">0</span>,fn=sys.stdout)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> each_list <span class="keyword">in</span> the_list:</span><br><span class="line">        <span class="keyword">if</span> isinstance(each_list,list):</span><br><span class="line">            print_lol(each_list,indent,level+<span class="number">1</span>,fn)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> indent:</span><br><span class="line">                <span class="keyword">for</span> tab_stop <span class="keyword">in</span> range(level):</span><br><span class="line">                    print(<span class="string">'\t'</span>,end=<span class="string">''</span>,file=fn)</span><br><span class="line">            print(each_list,file=fn)</span><br><span class="line">- - - - - - - - - - - setup.py- - - - - - - - - - -</span><br><span class="line"><span class="keyword">from</span> distutils.core <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">        name=<span class="string">'ae'</span>,</span><br><span class="line">        version=<span class="string">'1.0.0'</span>,</span><br><span class="line">        py_modules=[<span class="string">'ae'</span>],</span><br><span class="line">        author=<span class="string">'uou'</span>,</span><br><span class="line">        author_email=<span class="string">'uou@163.com'</span>,</span><br><span class="line">        url=<span class="string">'xx.com'</span>,</span><br><span class="line">        description=<span class="string">'Sorry,This is Practice'</span></span><br><span class="line">    )</span><br><span class="line">- - - - - - - - - - - 部署并安装- - - - - - - - - - -</span><br><span class="line">cd  到ae目录</span><br><span class="line">python setup.py sdist </span><br><span class="line">python setup.py install</span><br><span class="line">进入 sketch.txt目录</span><br><span class="line">- - - - - - - - -<span class="keyword">print</span>.py - - - - - - - - - - - - -</span><br><span class="line"><span class="keyword">import</span> ae</span><br><span class="line">man=[]</span><br><span class="line">other=[]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    data=open(<span class="string">'sketch.txt'</span>)</span><br><span class="line">    <span class="keyword">for</span> each_line <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            (role,line_spoken)=each_line.split(<span class="string">':'</span>,<span class="number">1</span>)</span><br><span class="line">            line_spoken=line_spoken.strip()</span><br><span class="line">            <span class="keyword">if</span> role == <span class="string">'Man'</span>:</span><br><span class="line">                man.append(line_spoken)</span><br><span class="line">            <span class="keyword">elif</span> role == <span class="string">'Other Man'</span>:</span><br><span class="line">                other.append(line_spoken)</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> IOError <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">'File Error:'</span>+str(err))</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'data'</span> <span class="keyword">in</span> locals():</span><br><span class="line">        data.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'man_data.txt'</span>,<span class="string">'w'</span>)<span class="keyword">as</span> man_file,open(<span class="string">'other.txt'</span>,<span class="string">'w'</span>)<span class="keyword">as</span> other_file:</span><br><span class="line">        ae.print_lol(man,fn=man_file)</span><br><span class="line">        ae.print_lol(other,fn=other_file)</span><br><span class="line"><span class="keyword">except</span> IOError <span class="keyword">as</span> orr:</span><br><span class="line">    print(<span class="string">'File Error:'</span>+str(orr))</span><br><span class="line">- - - - - - - - -F5完成- - - - - - - - - - - - -</span><br></pre></td></tr></table></figure>
<p>15. <strong>使用pickle模块腌制<a href="http://python.itcarlow.ie/chapter3/sketch.txt" target="_blank" rel="external">sketch.txt</a>输出man_data.txt、other_data.txt文件后使用print_lol还原man.txt、other.txt文件。提示：import pickle，pickle.dump()，pickle.load()!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">- - - - - - - - -dump<span class="class">.py</span> - - - - - - - - - - - -</span><br><span class="line">import pickle</span><br><span class="line">man=[]</span><br><span class="line">other=[]</span><br><span class="line">try:</span><br><span class="line">    data=<span class="function"><span class="title">open</span><span class="params">(<span class="string">'sketch.txt'</span>)</span></span></span><br><span class="line">    <span class="keyword">for</span> each_list <span class="keyword">in</span> data:</span><br><span class="line">        try:</span><br><span class="line">            (role,line_spoken)=each_list.<span class="function"><span class="title">split</span><span class="params">(<span class="string">':'</span>,<span class="number">1</span>)</span></span></span><br><span class="line">            line_spoken=line_spoken.<span class="function"><span class="title">strip</span><span class="params">()</span></span></span><br><span class="line">            <span class="keyword">if</span> role==<span class="string">'Man'</span>:</span><br><span class="line">                man.<span class="function"><span class="title">append</span><span class="params">(line_spoken)</span></span></span><br><span class="line">            elif role==<span class="string">'Other Man'</span>:</span><br><span class="line">                other.<span class="function"><span class="title">append</span><span class="params">(line_spoken)</span></span>        </span><br><span class="line">        except ValueError:</span><br><span class="line">             pass</span><br><span class="line">except IOError as err:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(err)</span></span>)</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'man_data.txt'</span>,<span class="string">'wb'</span>)</span><span class="title">as</span></span> man_file,<span class="function"><span class="title">open</span><span class="params">(<span class="string">'other_data.txt'</span>,<span class="string">'wb'</span>)</span><span class="title">as</span></span> other_file:</span><br><span class="line">         pickle.<span class="function"><span class="title">dump</span><span class="params">(man,man_file)</span></span></span><br><span class="line">         pickle.<span class="function"><span class="title">dump</span><span class="params">(other,other_file)</span></span></span><br><span class="line">except IOError as arr:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(arr)</span></span>)</span><br><span class="line">except pickle<span class="class">.PicklingError</span> as perr:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(perr)</span></span>)</span><br><span class="line">- - - - - - - - -load<span class="class">.py</span> - - - - - - - - - - - -             </span><br><span class="line">import ae</span><br><span class="line">import pickle</span><br><span class="line">new_man=[]</span><br><span class="line">new_other=[]</span><br><span class="line">try:</span><br><span class="line">    with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'man_data.txt'</span>,<span class="string">'rb'</span>)</span><span class="title">as</span></span> man_file,<span class="function"><span class="title">open</span><span class="params">(<span class="string">'other_data.txt'</span>,<span class="string">'rb'</span>)</span><span class="title">as</span></span> other_file:</span><br><span class="line">        new_man=pickle.<span class="function"><span class="title">load</span><span class="params">(man_file)</span></span></span><br><span class="line">        new_other=pickle.<span class="function"><span class="title">load</span><span class="params">(other_file)</span></span></span><br><span class="line">except IOError as err:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(err)</span></span>)</span><br><span class="line">except pickle<span class="class">.PicklingError</span> as perr:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(perr)</span></span>)</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'data.txt'</span>,<span class="string">'w'</span>)</span><span class="title">as</span></span> man,<span class="function"><span class="title">open</span><span class="params">(<span class="string">'other.txt'</span>,<span class="string">'w'</span>)</span><span class="title">as</span></span> other:</span><br><span class="line">        ae.<span class="function"><span class="title">print_lol</span><span class="params">(new_man,fn=man)</span></span></span><br><span class="line">        ae.<span class="function"><span class="title">print_lol</span><span class="params">(new_other,fn=other)</span></span></span><br><span class="line">except IOError as werr:</span><br><span class="line">    <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(werr)</span></span>)</span><br></pre></td></tr></table></figure>
<p>16. <strong>将num=” 585,18,1853,6621,17832,123,985,156,16587,258,186325,4552 “字符串去掉空格以,分割成列表从小到大排序。提示：像sort()，sorted()传入参数reverse=True将反转大小!</strong></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;</span>&gt; num=<span class="string">' 585,18,1853,6621,17832,123,985,156,16587,258,186325,4552 '</span></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; data=num.strip().split(<span class="string">','</span>)</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; data</span><br><span class="line">[<span class="string">'585'</span>, <span class="string">'18'</span>, <span class="string">'1853'</span>, <span class="string">'6621'</span>, <span class="string">'17832'</span>, <span class="string">'123'</span>, <span class="string">'985'</span>, <span class="string">'156'</span>, <span class="string">'16587'</span>, <span class="string">'258'</span>, <span class="string">'186325'</span>, <span class="string">'4552'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; sorted(data)</span><br><span class="line">[<span class="string">'123'</span>, <span class="string">'156'</span>, <span class="string">'16587'</span>, <span class="string">'17832'</span>, <span class="string">'18'</span>, <span class="string">'1853'</span>, <span class="string">'186325'</span>, <span class="string">'258'</span>, <span class="string">'4552'</span>, <span class="string">'585'</span>, <span class="string">'6621'</span>, <span class="string">'985'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; data</span><br><span class="line">[<span class="string">'585'</span>, <span class="string">'18'</span>, <span class="string">'1853'</span>, <span class="string">'6621'</span>, <span class="string">'17832'</span>, <span class="string">'123'</span>, <span class="string">'985'</span>, <span class="string">'156'</span>, <span class="string">'16587'</span>, <span class="string">'258'</span>, <span class="string">'186325'</span>, <span class="string">'4552'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; data.sort()</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; data</span><br><span class="line">[<span class="string">'123'</span>, <span class="string">'156'</span>, <span class="string">'16587'</span>, <span class="string">'17832'</span>, <span class="string">'18'</span>, <span class="string">'1853'</span>, <span class="string">'186325'</span>, <span class="string">'258'</span>, <span class="string">'4552'</span>, <span class="string">'585'</span>, <span class="string">'6621'</span>, <span class="string">'985'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure>
<p>17. <strong>将4个选手的<a href="http://python.itcarlow.ie/chapter5/hfpy_ch5_data.zip" target="_blank" rel="external">600米记录</a>数字从小到大排序并打印。提示：sanitize(清理)!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'keyor.txt'</span>)</span><span class="title">as</span></span> key:</span><br><span class="line">    data=key.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    keyor=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'resalg.txt'</span>)</span><span class="title">as</span></span> res:</span><br><span class="line">    data=res.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    resalg=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'somiy.txt'</span>)</span><span class="title">as</span></span> som:</span><br><span class="line">    data=som.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    somiy=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'yuitaku.txt'</span>)</span><span class="title">as</span></span> yui:</span><br><span class="line">    data=yui.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    yuitaku=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="function"><span class="title">sanitize</span><span class="params">(time_string)</span></span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'-'</span> <span class="keyword">in</span> time_string:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    elif <span class="string">':'</span> <span class="keyword">in</span> time_string:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="function"><span class="title">return</span><span class="params">(time_string)</span></span></span><br><span class="line">    (mins,secs)=time_string.<span class="function"><span class="title">split</span><span class="params">(splitter)</span></span></span><br><span class="line">    return (mins + <span class="string">'.'</span>+secs)</span><br><span class="line"></span><br><span class="line">clean_keyor=[]</span><br><span class="line">clean_resalg=[]</span><br><span class="line">clean_somiy=[]</span><br><span class="line">clean_yuitaku=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> keyor:</span><br><span class="line">    clean_keyor.<span class="function"><span class="title">append</span><span class="params">(sanitize(each_t)</span></span>)</span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> resalg:</span><br><span class="line">    clean_resalg.<span class="function"><span class="title">append</span><span class="params">(sanitize(each_t)</span></span>)</span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> somiy:</span><br><span class="line">    clean_somiy.<span class="function"><span class="title">append</span><span class="params">(sanitize(each_t)</span></span>)</span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> yuitaku:</span><br><span class="line">    clean_yuitaku.<span class="function"><span class="title">append</span><span class="params">(sanitize(each_t)</span></span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(clean_keyor)</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(clean_resalg)</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(clean_somiy)</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(clean_yuitaku)</span></span>)</span><br></pre></td></tr></table></figure>
<p>18. <strong>将下面的例子”clean_somiy=[] for each_t in somiy: clean_somiy.append(sanitize(each_t))”推导列表。</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- - - - - - - - -原型- - - - - - - - - - - -</span><br><span class="line">clean_somiy=[]</span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> somiy:</span><br><span class="line">    clean_somiy.<span class="function"><span class="title">append</span><span class="params">(sanitize(each_t)</span></span>)</span><br><span class="line">- - - - - - - - -推导- - - - - - - - - - - -</span><br><span class="line">clean_somiy=[<span class="function"><span class="title">sanitize</span><span class="params">(each_t)</span></span> <span class="keyword">for</span> each_t <span class="keyword">in</span> somiy]</span><br></pre></td></tr></table></figure>
<p>19. <strong>用推导列表将分钟转换为秒、将米转换成英尺(1米=3.281英尺)、将混合英文大小写，全部大写、使用sanitize()转换正确的时间、将字符串转换成浮点型float()、当然你可以使用函数链转换前面两项。</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">- - - - - - - - -分转换为秒- - - - - - - - - - - -</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>mins=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>secs=[m * <span class="number">60</span> <span class="keyword">for</span> m <span class="keyword">in</span> mins]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>secs</span><br><span class="line">[<span class="number">60</span>, <span class="number">120</span>, <span class="number">180</span>]</span><br><span class="line">- - - - - - - - -米转换成英尺- - - - - - - - - - - -</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>meters=[<span class="number">5</span>,<span class="number">8</span>,<span class="number">13</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>feet=[m * <span class="number">3.281</span> <span class="keyword">for</span> m <span class="keyword">in</span> meters]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>feet</span><br><span class="line">[<span class="number">16.405</span>, <span class="number">26.248</span>, <span class="number">42.653</span>]</span><br><span class="line">- - - - - - - - -英语全部大写- - - - - - - - - - - -</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>lower=[<span class="string">'I'</span>,<span class="string">'don\'t'</span>,<span class="string">'like'</span>,<span class="string">'it'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>upper=[s.upper() <span class="keyword">for</span> s <span class="keyword">in</span> lower]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>upper</span><br><span class="line">[<span class="string">'I'</span>, <span class="string">"DON'T"</span>, <span class="string">'LIKE'</span>, <span class="string">'IT'</span>]</span><br><span class="line">- - - - - - - - sanitize()转换正确的时间 - - - - - - - - - - -</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sanitize</span><span class="params">(string_time)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'-'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">':'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span>(string_time)</span><br><span class="line">    (mins,secs)=string_time.split(splitter)</span><br><span class="line">    <span class="keyword">return</span>(mins+<span class="string">'.'</span>+secs)</span><br><span class="line"></span><br><span class="line">time=[<span class="string">'3.25'</span>,<span class="string">'2-35'</span>,<span class="string">'2:52'</span>]</span><br><span class="line">clean=[sanitize(t) <span class="keyword">for</span> t <span class="keyword">in</span> time]</span><br><span class="line">print(clean)</span><br><span class="line">- - - - - - - - 将字符串转换成浮点型 - - - - - - - - - - -</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>time=[<span class="string">'3.25'</span>, <span class="string">'2.35'</span>, <span class="string">'2.52'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>clean=[float(t) <span class="keyword">for</span> t <span class="keyword">in</span> time]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>clean</span><br><span class="line">[<span class="number">3.25</span>, <span class="number">2.35</span>, <span class="number">2.52</span>]</span><br><span class="line">- - - - - - - - 函数链 - - - - - - - - - - -</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sanitize</span><span class="params">(string_time)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'-'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">':'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span>(string_time)</span><br><span class="line">    (mins,secs)=string_time.split(splitter)</span><br><span class="line">    <span class="keyword">return</span>(mins+<span class="string">'.'</span>+secs)</span><br><span class="line"></span><br><span class="line">time=[<span class="string">'3.25'</span>,<span class="string">'2-35'</span>,<span class="string">'2:52'</span>]</span><br><span class="line">clean=[float(sanitize(t)) <span class="keyword">for</span> t  <span class="keyword">in</span> time]</span><br><span class="line">print(clean)</span><br></pre></td></tr></table></figure>
<p>20. <strong>将4个选手的<a href="http://python.itcarlow.ie/chapter5/hfpy_ch5_data.zip" target="_blank" rel="external">600米记录</a>数字从小到大排序取前3个不重复数据，不实用set()的情况下。提示：not in，sanitize(清理)，unique(独特)!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">def <span class="function"><span class="title">sanitize</span><span class="params">(string_time)</span></span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'-'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    elif <span class="string">':'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="function"><span class="title">return</span><span class="params">(string_time)</span></span></span><br><span class="line">    (mins,secs)=string_time.<span class="function"><span class="title">split</span><span class="params">(splitter)</span></span></span><br><span class="line">    <span class="function"><span class="title">return</span><span class="params">(mins+<span class="string">'.'</span>+secs)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'resalg.txt'</span>)</span><span class="title">as</span></span> res:</span><br><span class="line">    data=res.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    resalg=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'keyor.txt'</span>)</span><span class="title">as</span></span> key:</span><br><span class="line">    data=key.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    keyor=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'somiy.txt'</span>)</span><span class="title">as</span></span> som:</span><br><span class="line">    data=som.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    somiy=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line">with <span class="function"><span class="title">open</span><span class="params">(<span class="string">'yuitaku.txt'</span>)</span><span class="title">as</span></span> yui:</span><br><span class="line">    data=yui.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">    yuitaku=data.<span class="function"><span class="title">strip</span><span class="params">()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span></span><br><span class="line"></span><br><span class="line">resalg=<span class="function"><span class="title">sorted</span><span class="params">([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> resalg])</span><br><span class="line">keyor=<span class="function"><span class="title">sorted</span><span class="params">([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> keyor])</span><br><span class="line">somiy=<span class="function"><span class="title">sorted</span><span class="params">([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> somiy])</span><br><span class="line">yuitaku=<span class="function"><span class="title">sorted</span><span class="params">([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> yuitaku])</span><br><span class="line"></span><br><span class="line">unique_resalg=[]</span><br><span class="line">unique_keyor=[]</span><br><span class="line">unique_somiy=[]</span><br><span class="line">unique_yuitaku=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> resalg:</span><br><span class="line">    <span class="keyword">if</span> each_t not <span class="keyword">in</span> unique_resalg:</span><br><span class="line">        unique_resalg.<span class="function"><span class="title">append</span><span class="params">(each_t)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(unique_resalg[<span class="number">0</span>:<span class="number">3</span>])</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> keyor:</span><br><span class="line">    <span class="keyword">if</span> each_t not <span class="keyword">in</span> unique_keyor:</span><br><span class="line">        unique_keyor.<span class="function"><span class="title">append</span><span class="params">(each_t)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(unique_keyor[<span class="number">0</span>:<span class="number">3</span>])</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> somiy:</span><br><span class="line">    <span class="keyword">if</span> each_t not <span class="keyword">in</span> unique_somiy:</span><br><span class="line">        unique_somiy.<span class="function"><span class="title">append</span><span class="params">(each_t)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(unique_somiy[<span class="number">0</span>:<span class="number">3</span>])</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each_t <span class="keyword">in</span> yuitaku:</span><br><span class="line">    <span class="keyword">if</span> each_t not <span class="keyword">in</span> unique_yuitaku:</span><br><span class="line">        unique_yuitaku.<span class="function"><span class="title">append</span><span class="params">(each_t)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(unique_yuitaku[<span class="number">0</span>:<span class="number">3</span>])</span></span></span><br></pre></td></tr></table></figure>
<p>21. <strong>将4个选手的<a href="http://python.itcarlow.ie/chapter5/hfpy_ch5_data.zip" target="_blank" rel="external">600米记录</a>数字从小到大排序取前3个不重复数据，使用函数set()简化代码。提示：set()去除重复数据，toach(教练)!</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">def <span class="function"><span class="title">sanitize</span><span class="params">(string_time)</span></span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'-'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    elif <span class="string">':'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="function"><span class="title">return</span><span class="params">(string_time)</span></span></span><br><span class="line">    (mins,secs)=string_time.<span class="function"><span class="title">split</span><span class="params">(splitter)</span></span></span><br><span class="line">    <span class="function"><span class="title">return</span><span class="params">(mins+<span class="string">'.'</span>+secs)</span></span></span><br><span class="line"></span><br><span class="line">def <span class="function"><span class="title">get_toach_data</span><span class="params">(filename)</span></span>:</span><br><span class="line">    try: </span><br><span class="line">        with <span class="function"><span class="title">open</span><span class="params">(filename)</span><span class="title">as</span></span> f:</span><br><span class="line">            data=f.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">        <span class="function"><span class="title">return</span><span class="params">(data.strip()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span>)</span><br><span class="line">    except IOError as ioerr:</span><br><span class="line">        <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(ioerr)</span></span>)</span><br><span class="line">        <span class="function"><span class="title">print</span><span class="params">(<span class="string">'None'</span>)</span></span></span><br><span class="line"></span><br><span class="line">resalg=<span class="function"><span class="title">get_toach_data</span><span class="params">(<span class="string">'resalg.txt'</span>)</span></span></span><br><span class="line">keyor=<span class="function"><span class="title">get_toach_data</span><span class="params">(<span class="string">'keyor.txt'</span>)</span></span></span><br><span class="line">somiy=<span class="function"><span class="title">get_toach_data</span><span class="params">(<span class="string">'somiy.txt'</span>)</span></span></span><br><span class="line">yuitaku=<span class="function"><span class="title">get_toach_data</span><span class="params">(<span class="string">'yuitaku.txt'</span>)</span></span></span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(set([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> resalg]))[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(set([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> keyor]))[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(set([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> somiy]))[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sorted(set([sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> yuitaku]))[<span class="number">0</span>:<span class="number">3</span>])</span><br></pre></td></tr></table></figure>
<p>22. <strong>用普通方法将keyor.txt文件从小到大排序取前3个不重复数据并题注名称打印。</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def <span class="function"><span class="title">sanitize</span><span class="params">(string_time)</span></span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    elif <span class="string">'-'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="function"><span class="title">return</span><span class="params">(string_time)</span></span></span><br><span class="line">    (mins,secs)=string_time.<span class="function"><span class="title">split</span><span class="params">(splitter)</span></span></span><br><span class="line">    <span class="function"><span class="title">return</span><span class="params">(mins+<span class="string">'.'</span>+secs)</span></span></span><br><span class="line"></span><br><span class="line">def <span class="function"><span class="title">get_coath_data</span><span class="params">(filename)</span></span>:</span><br><span class="line">    try:</span><br><span class="line">        with <span class="function"><span class="title">open</span><span class="params">(filename)</span><span class="title">as</span></span> f:</span><br><span class="line">            data=f.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">            <span class="function"><span class="title">return</span><span class="params">(data.strip()</span></span>.<span class="function"><span class="title">split</span><span class="params">(<span class="string">','</span>)</span></span>)</span><br><span class="line">    except IOError as err:</span><br><span class="line">        <span class="function"><span class="title">print</span><span class="params">(<span class="string">'Error:'</span>+str(err)</span></span>)</span><br><span class="line">        <span class="function"><span class="title">print</span><span class="params">(<span class="string">'None'</span>)</span></span></span><br><span class="line"></span><br><span class="line">keyor=<span class="function"><span class="title">get_coath_data</span><span class="params">(<span class="string">'keyor.txt'</span>)</span></span></span><br><span class="line">(keyor_name,keyor_birth)=keyor.<span class="function"><span class="title">pop</span><span class="params">(<span class="number">0</span>)</span></span>,keyor.<span class="function"><span class="title">pop</span><span class="params">(<span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(keyor_name+<span class="string">'600米情况：'</span>+str(sorted(set(sanitize(t)</span></span> <span class="keyword">for</span> t <span class="keyword">in</span> keyor))[<span class="number">0</span>:<span class="number">3</span>]))</span><br></pre></td></tr></table></figure>
<p>23. <strong>简单创建字典book和people。提示：s={}，s=dict()!</strong></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;</span>&gt; book=&#123;&#125;</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; type(book)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">dict</span>'&gt;</span></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; book=dict()</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; type(book)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">dict</span>'&gt;</span></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; book[<span class="string">'Name'</span>]=[<span class="string">'一千零一页'</span>,<span class="string">'Head First Python'</span>,<span class="string">'ActionScript3.0'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; book[<span class="string">'Money'</span>]=[<span class="string">'$29'</span>,<span class="string">'$15'</span>,<span class="string">'$20'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; book</span><br><span class="line">&#123;<span class="string">'Name'</span><span class="symbol">:</span> [<span class="string">'一千零一页'</span>, <span class="string">'Head First Python'</span>, <span class="string">'ActionScript3.0'</span>], <span class="string">'Money'</span><span class="symbol">:</span> [<span class="string">'$29'</span>, <span class="string">'$15'</span>, <span class="string">'$20'</span>]&#125;</span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; book[<span class="string">'Name'</span>][<span class="number">1</span>]</span><br><span class="line"><span class="string">'Head First Python'</span></span><br></pre></td></tr></table></figure>
<p>24. <strong>用字典将keyor.txt、resalg.txt文件从小到大排序取前3个不重复数据并题注名称打印。</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sanitize</span><span class="params">(string_time)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">'-'</span> <span class="keyword">in</span> string_time:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span>(string_time)</span><br><span class="line">    (mins,secs)=string_time.split(splitter)</span><br><span class="line">    <span class="keyword">return</span>(mins+<span class="string">'.'</span>+secs)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_coach_data</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(filename)<span class="keyword">as</span> f:</span><br><span class="line">            data=f.readline()</span><br><span class="line">            temp=data.strip().split(<span class="string">','</span>)</span><br><span class="line">            <span class="keyword">return</span>(&#123;</span><br><span class="line">                <span class="string">'Name'</span>:temp.pop(<span class="number">0</span>),</span><br><span class="line">                <span class="string">'Dob'</span>:temp.pop(<span class="number">0</span>),</span><br><span class="line">                <span class="string">'Times'</span>:str(sorted(set([sanitize(t) <span class="keyword">for</span> t <span class="keyword">in</span> temp]))[<span class="number">0</span>:<span class="number">3</span>])&#125;)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">'Error:'</span>+str(err))</span><br><span class="line">        print(<span class="string">'None'</span>)</span><br><span class="line"></span><br><span class="line">keyor=get_coach_data(<span class="string">'keyor.txt'</span>)</span><br><span class="line">resalg=get_coach_data(<span class="string">'resalg.txt'</span>)</span><br><span class="line">print(keyor[<span class="string">'Name'</span>]+<span class="string">'三次最快跑步时间： '</span>+keyor[<span class="string">'Times'</span>])</span><br><span class="line">print(resalg[<span class="string">'Name'</span>]+<span class="string">'三次最快跑步时间： '</span>+resalg[<span class="string">'Times'</span>])</span><br></pre></td></tr></table></figure>
<p>25. <strong>创建一个Athlete类，添加一个how_big的方法，输出”Hello world”的长度。</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span><br><span class="line">a=Athlete('Hello World')   ==  a=Athlete.__init__(a,"Hello World")</span><br><span class="line">a.how_big                  ==  Athlete.how_big(a)</span><br><span class="line">'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Athlete</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,value=<span class="number">0</span>)</span>:</span></span><br><span class="line">        self.thing=value</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">how_big</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(len(self.thing))</span><br><span class="line"></span><br><span class="line">a=Athlete(<span class="string">'Hello World'</span>)</span><br><span class="line">a.how_big()</span><br></pre></td></tr></table></figure>
<p>26. <strong>创建一个Athlete类，为他添加参数Name，Dob，times，并创建2个类的对象keyor和somiy。</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Athlete:</span><br><span class="line">    def __init__(self,a_name,a_dob=None,a_times=[]):</span><br><span class="line">        self.name=a_name</span><br><span class="line">        self.dob=a_dob</span><br><span class="line">        self.times=a_times</span><br><span class="line"></span><br><span class="line">keyor=<span class="function"><span class="title">Athlete</span><span class="params">(<span class="string">'keyor'</span>,<span class="string">'1994-01'</span>,[<span class="string">'3.55'</span>,<span class="string">'5:4'</span>,<span class="string">'2-11'</span>])</span></span></span><br><span class="line">somiy=<span class="function"><span class="title">Athlete</span><span class="params">(<span class="string">'Somiy'</span>)</span></span></span><br><span class="line">- - - - - - - - IDLE- - - - - - - - - - -</span><br><span class="line">&gt;&gt;&gt; keyor</span><br><span class="line">&lt;__main__<span class="class">.Athlete</span> <span class="tag">object</span> at <span class="number">0</span>x02DD8DF0&gt;</span><br><span class="line">&gt;&gt;&gt; <span class="function"><span class="title">print</span><span class="params">(keyor)</span></span></span><br><span class="line">&lt;__main__<span class="class">.Athlete</span> <span class="tag">object</span> at <span class="number">0</span>x02DD8DF0&gt;</span><br><span class="line">&gt;&gt;&gt; keyor<span class="class">.name</span></span><br><span class="line"><span class="string">'keyor'</span></span><br><span class="line">&gt;&gt;&gt; keyor<span class="class">.times</span></span><br><span class="line">[<span class="string">'3.55'</span>, <span class="string">'5:4'</span>, <span class="string">'2-11'</span>]</span><br><span class="line">&gt;&gt;&gt; somiy<span class="class">.name</span></span><br><span class="line"><span class="string">'Somiy'</span></span><br><span class="line">&gt;&gt;&gt; somiy.dob=<span class="string">'1995-05'</span></span><br><span class="line">&gt;&gt;&gt; somiy<span class="class">.dob</span></span><br><span class="line"><span class="string">'1995-05'</span></span><br></pre></td></tr></table></figure>
<p>27. <strong>创建一个Athlete类，为他添加top3(()，add_time()，add_times()方法，用Athlete类创建keyor，用add_time()，add_time()添加时间后使用pop3()方法打印前三的时间。提示：Athlete(运动员)!</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span><br><span class="line">一个让我特蛋疼6小时题,其实问题还是存在的</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>if '128'&lt;'56.8':</span><br><span class="line"> print("'128小于''56.8'")</span><br><span class="line">else:</span><br><span class="line"> print("'128'大于'56.8'")</span><br><span class="line"></span><br><span class="line">'128小于''56.8'</span><br><span class="line"></span><br><span class="line">字符串的比较是去除.的 128&lt;568</span><br><span class="line">如果不去乱写数字事实证明是不会有错的 10分钟以上就会出现问题了这程序</span><br><span class="line">'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Athlete</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,a_name,a_dob=None,a_times=[])</span>:</span></span><br><span class="line">        self.name=a_name</span><br><span class="line">        self.dob=a_dob</span><br><span class="line">        self.times=a_times</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">top3</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span>(sorted(set([sanitize(t) <span class="keyword">for</span> t <span class="keyword">in</span> self.times]))[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_time</span><span class="params">(self,the_value)</span>:</span></span><br><span class="line">        self.times.append(the_value)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_times</span><span class="params">(self,list_value)</span>:</span></span><br><span class="line">        self.times.extend(list_value)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_coach_data</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(filename)<span class="keyword">as</span> f:</span><br><span class="line">            data=f.readline()</span><br><span class="line">        temp=data.strip().split(<span class="string">','</span>)</span><br><span class="line">        <span class="keyword">return</span>(Athlete(temp.pop(<span class="number">0</span>),temp.pop(<span class="number">0</span>),temp))</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> ioerr:</span><br><span class="line">        print(<span class="string">'File error: '</span>+str(ioerr))</span><br><span class="line">        <span class="keyword">return</span>(<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sanitize</span><span class="params">(time_string)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"-"</span> <span class="keyword">in</span> time_string:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">':'</span> <span class="keyword">in</span> time_string:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span>(time_string)</span><br><span class="line">    (mins,secs)=time_string.split(splitter)</span><br><span class="line">    <span class="keyword">return</span>(mins+<span class="string">'.'</span>+secs)</span><br><span class="line"></span><br><span class="line">vera=Athlete(<span class="string">'Vera vi'</span>)</span><br><span class="line">vera.add_time(<span class="string">'1.31'</span>)</span><br><span class="line">vera.add_times([<span class="string">'12.22'</span>,<span class="string">'21.22'</span>,<span class="string">'1-2'</span>,<span class="string">'2:22'</span>,<span class="string">'0.8'</span>,<span class="string">'12.22'</span>,<span class="string">'1.58'</span>,<span class="string">'0.1'</span>])</span><br><span class="line">print(vera.name+<span class="string">'的三次成绩是：'</span>+str(vera.top3()))</span><br></pre></td></tr></table></figure>
<p>28. <strong>让Athlete继承内置的list类,有一个name属性，输出4个喜欢的水果。提示:apple(苹果)，banana(香蕉)，peaches(桃子)，Strawberry(草莓)! </strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; keyor=<span class="function"><span class="title">Athlete</span><span class="params">(<span class="string">'keyor'</span>)</span></span></span><br><span class="line">&gt;&gt;&gt; keyor<span class="class">.name</span></span><br><span class="line"><span class="string">'keyor'</span></span><br><span class="line">&gt;&gt;&gt; keyor.<span class="function"><span class="title">extend</span><span class="params">([<span class="string">'apple'</span>,<span class="string">'banana'</span>,<span class="string">'peaches'</span>,<span class="string">'strawberry'</span>])</span></span></span><br><span class="line">&gt;&gt;&gt; keyor</span><br><span class="line">[<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'peaches'</span>, <span class="string">'strawberry'</span>]</span><br><span class="line">&gt;&gt;&gt; <span class="keyword">for</span> fruit <span class="keyword">in</span> keyor:</span><br><span class="line">	<span class="function"><span class="title">print</span><span class="params">(keyor.name + <span class="string">' is like '</span>+ fruit +<span class="string">'.'</span>)</span></span></span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">keyor is like apple.</span><br><span class="line">keyor is like banana.</span><br><span class="line">keyor is like peaches.</span><br><span class="line">keyor is like strawberry.</span><br></pre></td></tr></table></figure>
<p>29. <strong>写一个AthleteList继承list的类，写出Athlete的效果！</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AthleteList</span><span class="params">(list)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,a_name,a_dob=None,a_times=[])</span>:</span></span><br><span class="line">        list.__init__([])</span><br><span class="line">        self.name=a_name</span><br><span class="line">        self.dob=a_dob</span><br><span class="line">        self.extend(a_times)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">top3</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span>(sorted(set([sanitize(t) <span class="keyword">for</span> t <span class="keyword">in</span> self]))[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sanitize</span><span class="params">(time_string)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">in</span> time_string:</span><br><span class="line">        splitter=<span class="string">':'</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">'-'</span> <span class="keyword">in</span> time_string:</span><br><span class="line">        splitter=<span class="string">'-'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span>(time_string)</span><br><span class="line">    (mins,secs)=time_string.split(splitter)</span><br><span class="line">    <span class="keyword">return</span>(mins+<span class="string">'.'</span>+secs)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_coach_data</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(filename)<span class="keyword">as</span> f:</span><br><span class="line">            data=f.readline()</span><br><span class="line">        temp=data.strip().split(<span class="string">','</span>)</span><br><span class="line">        <span class="keyword">return</span>(AthleteList(temp.pop(<span class="number">0</span>),temp.pop(<span class="number">0</span>),temp))</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">'IOError: '</span>+str(err))</span><br><span class="line">        <span class="keyword">return</span>(<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line">keyor=get_coach_data(<span class="string">'keyor.txt'</span>)</span><br><span class="line">yuitaku=get_coach_data(<span class="string">'yuitaku.txt'</span>)</span><br><span class="line"></span><br><span class="line">print(keyor.name+<span class="string">'：三次最好成绩公布：'</span>+str(keyor.top3()))</span><br><span class="line">print(yuitaku.name+<span class="string">'：三次最好成绩公布：'</span>+str(yuitaku.top3()))</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Questions">Questions</h2><ol>
<li><strong>写一个day列表包含着星期一至星期七,用print()BIF将他打印在屏幕，接下来用len()BIF得出列表中有几个数据项，然后访问day的第6个数据的值并打印。</strong>]]>
    </summary>
    
      <category term="Answers" scheme="http://yuitaku.github.io/tags/Answers/"/>
    
      <category term="Questions" scheme="http://yuitaku.github.io/tags/Questions/"/>
    
      <category term="Python" scheme="http://yuitaku.github.io/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[proxifier 翻译]]></title>
    <link href="http://yuitaku.github.io/2015/08/09/translation/"/>
    <id>http://yuitaku.github.io/2015/08/09/translation/</id>
    <published>2015-08-09T12:34:22.000Z</published>
    <updated>2015-08-09T14:15:46.965Z</updated>
    <content type="html"><![CDATA[<ul>
<li>File (文件)<ul>
<li>New Profile (新建文件)</li>
<li>Load Profile (加载文件)</li>
<li>Save Profile as (保存文件) </li>
<li>Manage Profiles (管理文件)</li>
<li>Import Profile (导入文件)</li>
<li>Export Profile (输出文件)</li>
<li>Atuostart (自动启动)</li>
<li>Checker for Product Updates on Startup (在启动时检查产品更新)</li>
<li>Profile Auto Updates (软件自动更新)</li>
<li>Close Proxifier Windows (关闭窗口)</li>
<li>Exit (退出)</li>
</ul>
</li>
<li>Profile (配置)<ul>
<li>Proxy Servers (代理服务器)</li>
<li>Proxification Rules (配置规则)</li>
<li>Name Resolution (域名解析)</li>
<li>Advanced (高级)<ul>
<li>Passwords Encryption (密码加密)</li>
<li>Services and Other Users (服务和其他用户)</li>
<li>HTTP Proxy Servers (HTTP代理服务器)</li>
<li>Handle Direct Connections (处理直接连接)</li>
<li>Infinite Connections Loop Detection (无限循环连接检测)</li>
</ul>
</li>
</ul>
</li>
<li>Log (日志)<ul>
<li>Screen Log (屏幕日志)<ul>
<li>Errors Only (只错误)</li>
<li>Normal (正常)</li>
<li>Verbose (详细)</li>
</ul>
</li>
</ul>
</li>
<li>File Log (日志文件) <ul>
<li>Set  Log Directory (设置日志目录) </li>
<li>Disable (关闭)</li>
<li>Errors Only (只错误)</li>
<li>Normal (正常)</li>
<li>Verbose (详细)</li>
<li>Verbose and Traffic (流量详情)<ul>
<li>Copy (复制)</li>
<li>Select All (全选)</li>
<li>Find (查找)</li>
<li>Find Next (查找下一个)</li>
<li>Print (打印)</li>
<li>Print Preview (打印预览)</li>
</ul>
</li>
</ul>
</li>
<li>View (视图)<ul>
<li>Icon in the System Tray (图标在系统通知区)</li>
<li>Show Tranffic on the System Tray Icon (显示运输图标在系统通知区)</li>
<li>Proxy Checker (代理检查)</li>
<li>Windows (窗口)<ul>
<li>Connections (连接方式)</li>
<li>Traffic  (流量)</li>
<li>Statistics (统计)</li>
</ul>
</li>
<li>Reset Layout (恢复默认)</li>
<li>Application look (软件外观)</li>
</ul>
</li>
<li>Help (帮助)<ul>
<li>Index(帮助文档)</li>
<li>Registration (注册)</li>
<li>About Proxifier (关于我们)    </li>
</ul>
</li>
</ul>
<h3 id="参考">参考</h3><p>profile with this  name already exists do you want to overwrite it ?<br><code>该名称已经存在你确定要覆盖它吗？</code><br>Name Resolution<br><code>域名解析</code><br>detect DNS settings automatically<br><code>自动检测DNS设置</code><br>resolve    hostnames through proxy<br><code>通过解析主机名代理</code><br>try to resolve via local DNS service first .<br><code>首次尝试通过本地DNS服务解决。</code><br>this option may cause significant delays if local dns is unavailable !<br><code>如果本地DNS不可用，此选项可能会导致延迟显著!</code><br>It is impossible to get real Ip addresses throgh proxy .<br><code>通过代理它是不可能得到实际的Ip地址。</code><br>proxifier assigns fake ip addresses through proxy ,that are only valid when it is running .<br><code>proxifier通过指定代理伪造IP地址，只有当它正在运行这是有效的。</code><br>proxifier automatically loads most recently used proflie on start .<br><code>proxifier会自动加载并启动最近使用文件。</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>File (文件)<ul>
<li>New Profile (新建文件)</li>
<li>Load Profile (加载文件)</li>
<li>Save Profile as (保存文件) </li>
<li>Manage Profiles (管理文件)<]]>
    </summary>
    
      <category term="Windows7" scheme="http://yuitaku.github.io/tags/Windows7/"/>
    
      <category term="proxifier" scheme="http://yuitaku.github.io/tags/proxifier/"/>
    
      <category term="Other" scheme="http://yuitaku.github.io/categories/Other/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Google search]]></title>
    <link href="http://yuitaku.github.io/2015/08/07/search/"/>
    <id>http://yuitaku.github.io/2015/08/07/search/</id>
    <published>2015-08-07T11:46:08.000Z</published>
    <updated>2015-08-08T01:31:42.519Z</updated>
    <content type="html"><![CDATA[<ul>
<li>link<br>例：<code>link:bilibili.com</code>    <strong>可以看到对bilibili外链的网站</strong><br>如果你拥有一个个人网站，估计很想知道有多少人对你的网站作了链接。而<code>link</code>语法就能让你迅速达到这个目的。</li>
<li>related<br>例：<code>related:duobei.com</code>     <strong>能找到多贝类似的教育网站</strong><br><code>related</code>用来搜索结构内容方面相似的网页。</li>
<li>cache<br>例：<code>cache:google.com</code>        <strong>然后我发现了google缓存界面</strong><br><code>cache</code>用来搜索GOOGLE服务器上某页面的缓存，通常用于查找某些已经被删除的死链接网页，相当于使用普通搜索结果页面中的“网页快照”功能。</li>
<li>info<br>例：<code>info:yuitaku.github.io</code>    <strong>提供Cache、link、related  神</strong><br><code>info</code>用来显示与某链接相关的一系列搜索，提供cache、link、related和完全包含该链接的网页的功能。</li>
<li>inurl<br>例： <code>inurl:bilibili Alice</code>    <strong>搜索bilibili url中的Alice结果</strong><br><code>inurl</code>语法返回的网页链接中包含第一个关键字，后面的关键字则出现在链接中或者网页文档中。INURL语法和基本搜索语法的最大区别在于，前者通常能提供非常精确的专题资料。</li>
<li>allinurl<br>例： <code>allinurl:bilibili.com</code> <strong>搜索链接中包含bilibili.com结果</strong><br><code>allinurl</code>语法返回的网页的链接中包含所有作用关键字。这个查询的关键字只集中于网页的链接字符串。</li>
<li>intitle<br>例： <code>intitle:可塑の记忆</code> <strong>搜索标题可塑の记忆的网页</strong><br><code>intitle</code>和<code>allintitle</code>的用法类似于上面的inurl和allinurl，只是后者对URL进行查询，而前者对网页的标题栏进行查询。</li>
<li>allintitle<br>例： <code>allintitle:ps入门</code> <strong>搜索出标题为ps入门的结果</strong><br>allintitle`语法返回的网页的链接中包含所有作用关键字。这个查询的关键字只集中于网页的标题进行查询。</li>
<li>filetype:<br>例：<code>filetype:pdf HTML5</code> <strong>搜索到html5.pdf文档</strong><br>支持格式pdf、ps、ppt、doc、mv、lwp、wps、swf、txt、xls等</li>
<li>空格(+)<br>例： <code>yuitaku github</code>  <strong>搜索到同时满足yuitaku和github存在</strong><br>一般搜索引擎需要在多个关键字之间加上<code>+</code>，而GOOGLE无需用明文的<code>+</code>来表示逻辑<code>与</code>操作，只要<code>空格</code>就可以了。</li>
<li>OR<br>例： <code>yuitaku OR bilibili</code> <strong>搜索yuitaku或bilibili的网页</strong><br>注意：小写的<code>or</code>，在查询的时候将被忽略；这样上述的操作实际上变成了一次<code>与</code>查询。<code>OR</code>代表两者其一都行也能同时满足</li>
<li>-<br>例： <code>yuitaku -github</code>  <strong>搜索到yuitaku中没有github的页面</strong><br><code>-</code>不包含后面的词</li>
<li>“”<br>例： <code>&quot;ps视频&quot;</code> <strong>精确搜索ps视频这个连贯的词</strong><br><code>&quot;&quot;</code>能让搜索更加精确.</li>
</ul>
<h3 id="参考">参考</h3><p>搜索：<code>filetype:ppt google搜索</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>link<br>例：<code>link:bilibili.com</code>    <strong>可以看到对bilibili外链的网站</strong><br>如果你拥有一个个人网站，估计很想知道有多少人对你的网站作了链接。而<code>link</cod]]>
    </summary>
    
      <category term="google" scheme="http://yuitaku.github.io/tags/google/"/>
    
      <category term="search" scheme="http://yuitaku.github.io/tags/search/"/>
    
      <category term="Other" scheme="http://yuitaku.github.io/categories/Other/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[proxifier配合ss代理全局]]></title>
    <link href="http://yuitaku.github.io/2015/08/05/proxifier/"/>
    <id>http://yuitaku.github.io/2015/08/05/proxifier/</id>
    <published>2015-08-04T23:09:22.000Z</published>
    <updated>2015-08-06T00:20:37.579Z</updated>
    <content type="html"><![CDATA[<p>Proxifier可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持 64位系统，支持Xp，Vista，Win7，支持socks4，socks5，http代理协议，支持TCP，UDP协议，可以指定端口，指定IP，指 定程序等运行模式，兼容性非常好。所以用Proxifier可以实现Windows的全局代理。<br>拥有SS的情况下，配合Proxifier代理全局，达到VPN的效果，下载github上的程序。<br>Proxifier官网地址：<a href="http://www.proxifier.com/" target="_blank" rel="external">http://www.proxifier.com/</a><br>网络上的注册码 :</p>
<ul>
<li>GKZ4Q-R2XYK-6FHWM-EVQVD-RKFJK</li>
<li>89Z4L-W3HHW-6WAYE-2XMHM-DHYBQ</li>
<li>SDZ2Y-NY3RK-YKT32-P8AEK-GYEJF</li>
<li>KEZSE-92N5C-VR3WV-PSVQT-DMC7G</li>
<li>L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C（Portable Edition）</li>
<li>5EZ8G-C3WL5-B56YG-SCXM9-6QZAP（Standard Edition）(我用 了这个)<br>打开软件 Profile菜单 Proxy Servers  -&gt;add-&gt;然后把SS添加上去<br>Address:127.0.0.1<br>port:1080<br>Protocol: SOCKS5 Version 5<br>点击 OK完成！<h2 id="参考资料">参考资料</h2></li>
</ul>
<p><a href="http://www.proxifier.com/" target="_blank" rel="external">Proxifier官方</a>        </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Proxifier可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持 64位系统，支持Xp，Vista，Win7，支持socks4，socks5，http代理协议，支持TCP，UDP协议，可以指定端口，指定IP，指 定程序等运行模式，兼容]]>
    </summary>
    
      <category term="proxfier" scheme="http://yuitaku.github.io/tags/proxfier/"/>
    
      <category term="ss" scheme="http://yuitaku.github.io/tags/ss/"/>
    
      <category term="Windows" scheme="http://yuitaku.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[视频小技巧]]></title>
    <link href="http://yuitaku.github.io/2015/08/04/web-skill/"/>
    <id>http://yuitaku.github.io/2015/08/04/web-skill/</id>
    <published>2015-08-04T06:04:37.000Z</published>
    <updated>2015-08-05T01:47:40.427Z</updated>
    <content type="html"><![CDATA[<h2 id="1-种子特征">1.种子特征</h2><p><strong>magnet:?xt=urn:btih:</strong></p>
<h2 id="2-P站ID使用方法">2.P站ID使用方法</h2><p><strong>P站画师ID使用：</strong><a href="http://www.pixiv.net/member.php?id=【替换为ID号】" target="_blank" rel="external">http://www.pixiv.net/member.php?id=【替换为ID号】</a><br><strong>P站作品ID使用：</strong><a href="http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=【替换为ID号】" target="_blank" rel="external">http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=【替换为ID号】</a></p>
<h2 id="3-解析B站视频：">3.解析B站视频：</h2><p><strong>页面地址：</strong><a href="http://www.bilibili.com/" target="_blank" rel="external">http://www.bilibili.com/</a><br><strong>对应地址 : </strong><a href="http://www.bilibilijj.com/" target="_blank" rel="external">http://www.bilibilijj.com/</a></p>
<h2 id="4-电驴verycd资源">4.电驴verycd资源</h2><p><strong>页面地址：</strong><a href="http://www.verycd.com" target="_blank" rel="external">http://www.verycd.com</a><br><strong>对应地址 : </strong><a href="http://www.verycd.gdajie.com/" target="_blank" rel="external">http://www.verycd.gdajie.com/</a></p>
<h2 id="5-豆瓣电影">5.豆瓣电影</h2><p><strong>页面地址：</strong><a href="http://movie.douban.com/" target="_blank" rel="external">http://movie.douban.com/</a><br><strong>对应地址 : </strong><a href="http://movie.doubanpi.com/" target="_blank" rel="external">http://movie.doubanpi.com/</a></p>
<h2 id="6-优酷和土豆视频">6.优酷和土豆视频</h2><p><strong>对应地址：</strong><a href="http://www.xiayouku.com/" target="_blank" rel="external">http://www.xiayouku.com/</a><br><strong>对应地址 : </strong><a href="http://www.kisstudou.com/" target="_blank" rel="external">http://www.kisstudou.com/</a><br><strong>硕鼠地址 : </strong><a href="http://www.flvcd.com/" target="_blank" rel="external">http://www.flvcd.com/</a><br><del>感觉这个现在没什么用，还有广告麻烦,大视频还是先网盘搜索</del></p>
<h2 id="7-审查元素">7.审查元素</h2><p>打开 浏览器 F12打开 Network 打开视频网页 播放视频 就能看到下方加载视频了，完毕后双击文件从浏览器缓存中直接下载完毕。</p>
<h2 id="8-自定义搜索">8.自定义搜索</h2><p><strong>Google : </strong><a href="https://cse.google.com/cse/all" target="_blank" rel="external">https://cse.google.com/cse/all</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1-种子特征">1.种子特征</h2><p><strong>magnet:?xt=urn:btih:</strong></p>
<h2 id="2-P站ID使用方法">2.P站ID使用方法</h2><p><strong>P站画师ID使用：</strong><a h]]>
    </summary>
    
      <category term="技巧" scheme="http://yuitaku.github.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Other" scheme="http://yuitaku.github.io/categories/Other/"/>
    
  </entry>
  
</feed>